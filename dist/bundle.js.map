{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://cardgame/./src/index.js"],"sourcesContent":["import \"./css/style.css\"\n\n\nconst screen = document.querySelector('.screen')\nconst levelButtons = screen.querySelectorAll('.level-button')\nconst startButton = screen.querySelector('.start-button')\n\nwindow.level\nwindow.cardsPairs\nlet cardsPack = []\nconst shirt = './img/shirt.jpg'\nlet hasFlippedCard = false\nlet firstCard, secondCard\nlet score = 0\n\nlevelButtons.forEach((levelButton) => {\n    levelButton.addEventListener('click', () => {\n        startButton.disabled = false\n        window.level = levelButton.value\n        if (levelButton.value === '1') {\n            window.cardsPairs = 3\n            levelButtons[0].classList.add('level-button-active')\n            levelButtons[1].classList.remove('level-button-active')\n            levelButtons[2].classList.remove('level-button-active')\n        }\n        if (levelButton.value === '2') {\n            window.cardsPairs = 6\n            levelButtons[1].classList.add('level-button-active')\n            levelButtons[0].classList.remove('level-button-active')\n            levelButtons[2].classList.remove('level-button-active')\n        }\n        if (levelButton.value === '3') {\n            window.cardsPairs = 9\n            levelButtons[2].classList.add('level-button-active')\n            levelButtons[0].classList.remove('level-button-active')\n            levelButtons[1].classList.remove('level-button-active')\n        }\n        console.log(window.cardsPairs)\n    })\n})\n\nstartButton.addEventListener('click', () => {\n    screen.textContent = ''\n    const container = document.createElement('container')\n    container.classList.add('container')\n    screen.appendChild(container)\n    const header = document.createElement('header')\n    header.classList.add('header')\n    container.appendChild(header)\n    const timer = document.createElement('div')\n    timer.classList.add('timer')\n    header.appendChild(timer)\n    const min = document.createElement('p')\n    min.classList.add('min')\n    min.textContent = 'min'\n    const sec = document.createElement('p')\n    sec.classList.add('sec')\n    sec.textContent = 'sec'\n    const time = document.createElement('p')\n    time.classList.add('time')\n    time.textContent = '00.00'\n    timer.appendChild(min)\n    timer.appendChild(sec)\n    timer.appendChild(time)\n    const button = document.createElement('button')\n    button.classList.add('repeat-button')\n    button.textContent = 'Начать заново'\n    header.appendChild(button)\n    const field = document.createElement('div')\n    field.classList.add('cards-field')\n    container.appendChild(field)\n\n    generateField()\n\n    function cardsFieldTemplate(cards) {\n        const result = document.createElement('div')\n        result.classList.add('card', 'flip')\n        result.setAttribute('data-name', cards.name)\n        const frontFace = document.createElement('img')\n        frontFace.classList.add('front-face')\n        frontFace.setAttribute('src', cards.imagePath)\n        const backFace = document.createElement('img')\n        backFace.classList.add('back-face')\n        backFace.setAttribute('src', shirt)\n        result.appendChild(frontFace)\n        result.appendChild(backFace)\n        return result\n    }\n\n    const fragment = document.createDocumentFragment()\n\n    cardsPack.forEach((cards) => {\n        const cardCell = cardsFieldTemplate(cards)\n        fragment.appendChild(cardCell)\n    })\n\n    field.appendChild(fragment)\n\n    const cards = document.querySelectorAll('.card')\n\n    function flipCard() {\n        this.classList.add('flip')\n\n        if (!hasFlippedCard) {\n            hasFlippedCard = true\n            firstCard = this\n            return\n        }\n\n        secondCard = this\n        hasFlippedCard = false\n\n        checkForMatch()\n    }\n\n    function checkForMatch() {\n        if (firstCard.dataset.name === secondCard.dataset.name) {\n            score++\n            console.log(score)\n            if (score === window.cardsPairs) {\n                setTimeout(function () {\n                    alert('Ты победил')\n                }, 300)\n                setTimeout(function () {\n                    document.location.reload()\n                }, 400)\n            }\n        } else {\n            setTimeout(function () {\n                alert('Ты проиграл')\n            }, 300)\n            setTimeout(function () {\n                document.location.reload()\n            }, 400)\n        }\n    }\n\n    cards.forEach((card) => {\n        if (card.classList.contains('flip')) {\n            setTimeout(function () {\n                card.classList.remove('flip')\n            }, 5000)\n        }\n        card.addEventListener('click', flipCard)\n    })\n})\n\nconst cardsArr = [\n    {\n        name: 'six-clubs',\n        imagePath: './img/6clubs.jpg',\n    },\n    {\n        name: 'seven-clubs',\n        imagePath: './img/7clubs.jpg',\n    },\n    {\n        name: 'eight-clubs',\n        imagePath: './img/8clubs.jpg',\n    },\n    {\n        name: 'nine-clubs',\n        imagePath: './img/9clubs.jpg',\n    },\n    {\n        name: 'ten-clubs',\n        imagePath: './img/10clubs.jpg',\n    },\n    {\n        name: 'jack-clubs',\n        imagePath: './img/jackClubs.jpg',\n    },\n    {\n        name: 'queen-clubs',\n        imagePath: './img/queenClubs.jpg',\n    },\n    {\n        name: 'king-clubs',\n        imagePath: './img/kingClubs.jpg',\n    },\n    {\n        name: 'ace-clubs',\n        imagePath: './img/aceClubs.jpg',\n    },\n    {\n        name: 'six-diamonds',\n        imagePath: './img/8diamonds.jpg',\n    },\n    {\n        name: 'seven-diamonds',\n        imagePath: './img/7diamonds.jpg',\n    },\n    {\n        name: 'eight-diamonds',\n        imagePath: './img/8diamonds.jpg',\n    },\n    {\n        name: 'nine-diamonds',\n        imagePath: './img/9diamonds.jpg',\n    },\n    {\n        name: 'ten-diamonds',\n        imagePath: './img/10diamonds.jpg',\n    },\n    {\n        name: 'jack-diamonds',\n        imagePath: './img/jackDiamonds.jpg',\n    },\n    {\n        name: 'queen-diamonds',\n        imagePath: './img/queenDiamonds.jpg',\n    },\n    {\n        name: 'king-diamonds',\n        imagePath: './img/kingDiamonds.jpg',\n    },\n    {\n        name: 'ace-diamonds',\n        imagePath: './img/aceDiamonds.jpg',\n    },\n    {\n        name: 'six-hearts',\n        imagePath: './img/6hearts.jpg',\n    },\n    {\n        name: 'seven-hearts',\n        imagePath: './img/7hearts.jpg',\n    },\n    {\n        name: 'eight-hearts',\n        imagePath: './img/8hearts.jpg',\n    },\n    {\n        name: 'nine-hearts',\n        imagePath: './img/9hearts.jpg',\n    },\n    {\n        name: 'ten-hearts',\n        imagePath: './img/10hearts.jpg',\n    },\n    {\n        name: 'jack-hearts',\n        imagePath: './img/jackHearts.jpg',\n    },\n    {\n        name: 'queen-hearts',\n        imagePath: './img/queenHearts.jpg',\n    },\n    {\n        name: 'king-hearts',\n        imagePath: './img/kingHearts.jpg',\n    },\n    {\n        name: 'ace-hearts',\n        imagePath: './img/aceHearts.jpg',\n    },\n    {\n        name: 'six-spades',\n        imagePath: './img/6spades.jpg',\n    },\n    {\n        name: 'seven-spades',\n        imagePath: './img/7spades.jpg',\n    },\n    {\n        name: 'eight-spades',\n        imagePath: './img/8spades.jpg',\n    },\n    {\n        name: 'nine-spades',\n        imagePath: './img/9spades.jpg',\n    },\n    {\n        name: 'ten-spades',\n        imagePath: './img/10spades.jpg',\n    },\n    {\n        name: 'jack-spades',\n        imagePath: './img/jackSpades.jpg',\n    },\n    {\n        name: 'queen-spades',\n        imagePath: './img/queenSpades.jpg',\n    },\n    {\n        name: 'king-spades',\n        imagePath: './img/kingSpades.jpg',\n    },\n    {\n        name: 'ace-spades',\n        imagePath: './img/aceSpades.jpg',\n    },\n]\n\nfunction generateField() {\n    let fieldLength = 0\n    const totalCards = cardsArr.length\n    if (window.level === '1') {\n        fieldLength = 6\n    }\n    if (window.level === '2') {\n        fieldLength = 12\n    }\n    if (window.level === '3') {\n        fieldLength = 18\n    }\n    let i = 0\n    while (i < fieldLength / 2) {\n        let randomIndex = getRandomInt(totalCards)\n        if (!cardsPack.includes(cardsArr[randomIndex])) {\n            cardsPack.push(cardsArr[randomIndex])\n            cardsPack.push(cardsArr[randomIndex])\n            i++\n        }\n    }\n    cardsPack.sort(function () {\n        return 0.5 - Math.random()\n    })\n    console.log(cardsPack)\n}\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max)\n}\n"],"names":["screen","document","querySelector","levelButtons","querySelectorAll","startButton","window","level","cardsPairs","firstCard","secondCard","cardsPack","hasFlippedCard","score","forEach","levelButton","addEventListener","disabled","value","classList","add","remove","console","log","textContent","container","createElement","appendChild","header","timer","min","sec","time","button","field","fieldLength","totalCards","cardsArr","length","i","randomIndex","max","Math","floor","random","includes","push","sort","generateField","fragment","createDocumentFragment","flipCard","this","dataset","name","setTimeout","alert","location","reload","cards","cardCell","result","setAttribute","frontFace","imagePath","backFace","cardsFieldTemplate","card","contains"],"sourceRoot":""}